// Generated by https://quicktype.io
// https://github.com/oblador/react-native-vector-icons
// https://oblador.github.io/react-native-vector-icons/

export interface MenuItem {
    name: string;
    icon: string;
    component: string;
}

export interface LoginData {
    correo:   string;
    password: string;
}

export interface LoginResponse {
    success: boolean,
    message: string,
    usuario: Usuario;
    token:   string;
}

export interface Usuario {
    id:     string;
    nombre: string;
    correo: string;
    rol:    string;
    estado: number
}

export interface RegisterData {
    correo:   string;
    password: string;
    nombre:   string;
}


export interface BuscarEntradaData {
    anio:      number;
    noentrada: number;
}

export interface DetalleEntradaResponse {
    Identificador:         number;
    NumeroEntrada:         number;
    Anio:                  number;
    NumeroEntradaCompleto: string;
    TipoTramite:           string;
    Area:                  string;
    Estado:                string;
    Tramites:              string;
    NombreSociedad:        string;
}

export interface ObtenerEntradaResponse {
    IdEntrada:                         string;
    NumeroEntrada:                     string;
    Anio:                              string;
    ContribuyenteFiscal:               string;
    PrimerApellidoPresentante:         string;
    SegundoApellidoPresentante:        string;
    IdentificacionPresentante:         string;
    TipoIdentificacionPresentante:     string;
    registro:                          Registro[];
    AntecedentesFolioReal:             any[];
    AntecedentesLibro:                 any[];
    DetallesTramite:                   any[];
    DocumentoDefecto:                  any[];
    DocumentoFinalizacionTramite:      any[];
    DocumentoSuscripcionAlertaParcial: any[];
    DocumentosEscaneados:              any[];
    DocumentosPresentados:             any[];
    DocumentosPresentadosContenido:    any[];
    DocumentosPresentadosNombre:       any[];
    HistorialTramitacion:              any[];
    IngresosEntrada:                   any[];
}


export interface DetalleFoliosResponse {
    Identificador:      string;
    Folio:              string;
    ValorSeleccion:     string;
    IdTipoRegistro:     string;
    ValorFormaJuridica: string;
    Propietarios:       string;
    Status:             string;
}


export interface AgentesResponse {
    Id:                      string;
    folio:                   string;
    tiporegistro:            string;
    tiposociedad:            string;
    estadofolio:             string;
    nombresociedad:          string;
    agenteresidente:         string;
    Fecha_Constitucion:      string;
    estado_agente:           string;
    marginaladvertencia:     string;
    marginalagenteresidente: string;
}
export interface FolioSuspendidoResponse {
    id:                       number;
    Numero_Folio_Real:        string;
    Status:                   string;
    Anio:                     string;
    Tipo_Registro:            string;
    Modulo:                   string;
    Nombre_Sociedad:          string;
    Fecha_Constitucion:       string;
    Fecha_Asiento_Suspension: string;
}



export interface AntecedentesFolioReal {
    id:                string;
    IdFolioReal:       string;
    FolioRealToString: string;
}

export interface DetallesTramite {
    id:     string;
    Nombre: string;
}

export interface Documento {
    id:          string;
    IdDocumento: string;
    IdEntrada:   string;
    Nombre:      string;
}

export interface HistorialTramitacion {
    id:     string;
    Fecha:  string;
    Nombre: string;
}

export interface ObtenerFolioResponse {
    IdFolio:                                      string;
    TipoRegistro:                                 string;
    Estado:                                       string;
    Folio_Emulador:                               string;
    Asiento:                                      string;
    Rollo:                                        string;
    Imagen:                                       string;
    Num_Documento:                                string;
    Relaciones_TieneFoliosMatrices:               string;
    Relaciones_TieneFoliosResultantes:            string;
    RegistroPrevio_TieneElementosVigentes:        string;
    RegistroPrevio_TieneElementosNoVigentes:      string;
    RegistroElectronico_TieneElementosVigentes:   string;
    RegistroElectronico_TieneElementosNoVigentes: string;
    TienePrelacion:                               string;
    TieneUsuariosRelacionados:                    string;
    TieneApoderados:                              boolean;
    DatosEmulador:                                any[];
    DatosPersonaMoral:                                any[];
    registro:                                     Registro[];
}


export interface Registro {
    id:     string;
    titulo: string;
    campo:  string;
}

export interface TomosResponse {
    Id:            string;
    Tomo:          string;
    Folio:         string;
    IdTipoTomo:    string;
    TipoTomo:      string;
    IdProvincia:   string;
    Provincia:     string;
    Finca:         string;
    Tomo_ToString: string;
}

export interface RollosResponse {
    Id:             string;
    Rollo:          string;
    TipoRollo:      string;
    Seccion:        string;
    Rollo_ToString: string;
}

export interface RucResponse {
    message: string;
}

export interface TiposTomoResponse {
    tipotomos: TiposTomo[];
}

export interface TiposTomo {
    value:      string;
    label:   string;
}

export interface ObtenerProvinciasResponse {
    Provincia: Provincias[];
}

export interface Provincias {
    value:      string;
    label:   string;
}

export interface TiposRolloResponse {
    TiposRollo: TiposRollos[];
}

export interface TiposRollos {
    value:      string;
    label:   string;
}

export interface SeccionesRolloResponse {
    SeccionesRollo: SeccionesRollos[];
}

export interface SeccionesRollos {
    value:      string;
    label:   string;
}

export interface AuraResponse {
    WebChat:  string;
    Telegram: string;
    Whatsapp: string;
}


